With **sharpDox** it is possible to create additional Articles, namespace descriptions and custom navigations for your documentation.

Advanced documentation can include the following pieces:

## Code-Documentation ##

**sharpDox** core task is the creation of a code documentation, which gets create out of the inline documentation of a c# solution.
If there is no custom navigation inside the solution path, **sharpDox** will create a simple standard navigation for you.

The code documentation can be included in any position inside a custom navigation (see: Navigation).

## Project Description ##
  
It is possible to create a project description which will be used by the chm and html exporter as the startpage. It is possible to write the description in the markdown sytax.

Just create a file with the name _README.md_ anywhere in the solution path. **sharpDox** will parse this file during the build process.

> **Creation of projekt descriptions**

> Create a file anywhere in the solution path with the name **README.md** and use the markdown syntax for formatting.

## Namespace Description ##

With **sharpDox** it is possible to create descriptions for namespaces. Just create a file with the following format anywhere in the solution path: _Name.space.Name.sdn_

> **Creation of namespace descriptions**

> Create a file with the _.sdnd_ extension anywhere in the solution path. Use the markdown syntax for formatting.
> **Example:** SharpDox.Sdk.sdnd - A description for the _SharpDox.Sdk_ namespace.

##Articles##
Besides the code documentation and the description it is also possible to create articles. Articles are additional pages inside the documentation, which are accessible through a custom navigation. It is mandatory to create a navigation, if you use articles. Otherwise the articles get ignored.

To create a articles just create a file with the _.sda_ extension anywhere in the solutionpath. You are able to use markdown for formatting. Please see **Navigation** for information on how to link to the articles.

>**Creation of articles**

> Create a file with the _.sda_ extension anywhere in the solution path. The name is arbitrary. Use markdown for formatting.

##Links##
You are able to create links inside descirptions and articles to link to other elements within the documention.

Use the placeholder instead of an url (the examples use the markdown syntax):

**Namespace** - {{namespace-link:[Fullname]}}

> **Example:** \[LinkText]({{namespace-link:SharpDox.Sdk}})

**Type** - {{type-link:[Identifier]}}
> **Example:** \[LinkText]({{type-link:SharpDox.Sdk.Templater}})

**Article** - {{article-link:[ArticleName]}}
> **Example:** \[LinkText]({{article-link:exporter-tutorial}})

**Image** - You are able to copy images into the solution path to use them within articles and descriptions. Just use the _sdi._ prefix to mark the image for **sharpDox**.

> **Example:** !\[Shell]({{image-link:sdi.startSD.png}})

##Navigation##
The navigation is the main element of any advanced documentation. The custom navigation file defines the structure of the documentation. The navigation of the **sharpDox** documentation is used for the following example:

	-Introduction#introduction
	-Users
	--Create advanced documentations#advanced-tutorial
	--Create multilanguage documentations#multilang-tutorial
	-Developers
	--Create a exporter#exporter-tutorial
	--API#SDDoc

The number hyphens indicates the level of the item followed by the name of the menuitem. _-Introduction_ means that the menuitem with the name _Introduction_ should be on the first position in the first level of the navigation.
The part behind the _#_ defines the linked article (without the file extension). If a menuitem is missing the _#_ part, it is just a "placeholder" (for example the second line: _-Users_).

	--Create advanced documentations#advanced-tutorial
Means that **sharpDox** should create a child menuitem with the name _Create advanced documentation_ which is linked to the _advanced-tutorial_ article.

If you want a item to link to the code documentation, use the keyword _SDDoc_ instead of an article name (In the example above: _--API#SDDoc_).

The navigation file should be created anywhere in the solutionpath with the name _default.sdnav_.

