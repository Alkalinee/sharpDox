With *sharpDox* it is possible to create additional Articles, namespace descriptions and custom navigations for your documentation.

Advanced documentation can consist of the following elements.

### Code-Documentation ###

*sharpDox* core task is the creation of a code documentation, which gets created out of the inline documentation of a c# solution.
If you use a solution/project as the input of a build process, *sharpDox* will create a simple code documentation.

The code documentation can be included in a custom navigation (see: Navigation).

### Project Description ###
  
It is possible to create a project description which will can be used by the exporters. It is possible to write the description in the markdown sytax.

Just create a file with the name _default.sdpd_ underneath the input file path. *sharpDox* will parse this file during the build process.

### Namespace Description ###

*sharpDox* is able to parse custom descriptions for namespaces. Just create a file with a `.sdnd` extension and write your description in the markdown syntax. *sharpDox* recognizes these files as namespace descriptions.
If you want a description for the namespace `SharpDox.Sdk`, create the file `SharpDox.Sdk.sdnd`.

###Articles###

Besides the code documentation and the description it is also possible to create articles. Articles are additional pages inside the documentation, which are accessible through a custom navigation. It is mandatory to create a custom navigation, if you use articles. Otherwise the articles get ignored.

To create a articles just create a file with the `.sda` extension anywhere underneath the input file path. The file name is arbitrary. Use the markdown syntax for formatting. Please see *Navigation* for information on how to create a custom navigation.

### Tokens ###

It is possible to create a list of tokens which are usable in descriptions and articles.

Just create a file with the name `tokens.sdt` underneath the input file. This file gets parsed during the build process.
Create one element per line in the following formatting

    TokenName = TokenValue

For example this token can be used in articles. Use the following syntax to include a token:


    {{"token:BUILD_SERVER}}

Please remove the `"` from the example.

### Links ###

You are able to create links inside descriptions and articles to link to other elements within the documention. It is also possible to include images.
Please use the following placeholders and remove the `"` again.

Namespace: `{{"namespace-link:[Fullname]}}`

> Example: `\[LinkText]({{"namespace-link:SharpDox.Sdk}})`

Type: `{{"type-link:[Identifier]}}`
> Example: `\[LinkText]({{"type-link:SharpDox.Sdk.Templater}})`

Article: `{{"article-link:[ArticleFilename]}}`
> Example: `\[LinkText]({{"article-link:exporter-tutorial}})`

Image: You are able to use images underneath the input file path within articles and descriptions. Just use the `sdi.` prefix to mark the image for *sharpDox*.

> Example: `!\[Shell]({{"image-link:sdi.startSD.png}})`

### Navigation ###
The navigation is the main element of any advanced documentation. The custom navigation file defines the structure of the documentation. The navigation of the *sharpDox* documentation is used for the following example:

	-Introduction#introduction
	-Users
	--Create advanced documentation#advanced-tutorial
	--Create multilanguage documentation#multilang-tutorial
	-Developers
	--Create a exporter#exporter-tutorial
	--API#..\SharpDox.sln

The number hyphens indicates the level of the item followed by the name of the menu item. `-Introduction` means that the menu item with the name `Introduction` should be on the first position in the first level of the navigation.
The part behind the `#` defines the linked article. Use the article file name, without the extension.
If a menu item is missing the `#` part, it is just a "placeholder" (for example the second line: `-Users`). It is also possible to reference articles by its absolute and relative path.

	--Create advanced documentation#advanced-tutorial
	
This implies that *sharpDox* should create a child menu item with the name _Create advanced documentation_ which is linked to the `advanced-tutorial` article.

If you want a item to link to a code documentation, use the path to the solution/project instead of an article name (In the example above: `--API#..\SharpDox.sln`).
It is possible to include more than one code documentation.

To build an advanced documentation use the navigation file as the input file.

